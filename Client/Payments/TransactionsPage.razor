@inject ITransactionsClient TransactionsClient
@inject IDialogService DialogService

@page "/transactions"

<PageTitle>Transactions</PageTitle>

<MudText Typo="Typo.h3" Align="Align.Center" GutterBottom="true" Class="mt-4 mb-8">Transactions</MudText>

<MudButton Variant="Variant.Filled" OnClick="NewTransaction" Class="mb-2">New transaction</MudButton>

<MudTable @ref="table" ServerData="ServerReload" Hover="true" Elevation="0" Breakpoint="Breakpoint.Sm" Loading="@loading"
    LoadingProgressColor="Color.Info">
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Date</MudTh>
        <MudTh>Status</MudTh>
        <MudTh>From</MudTh>
        <MudTh>Reference</MudTh>
        <MudTh>Currency</MudTh>
        <MudTh>Amount</MudTh>
    </HeaderContent>
    <RowTemplate Context="transaction">
        <MudTd DataLabel="Id">@transaction.Id</MudTd>
        <MudTd DataLabel="Date">@transaction.Date?.ToString("g")</MudTd>
        <MudTd DataLabel="Status">@transaction.Status</MudTd>
        <MudTd DataLabel="From">@transaction.From</MudTd>
        <MudTd DataLabel="Reference">@transaction.Reference</MudTd>
        <MudTd DataLabel="Currency">@transaction.Currency</MudTd>
        <MudTd DataLabel="Amount">@transaction.Amount.ToString("c")</MudTd>
    </RowTemplate>
    <LoadingContent>
        <MudText>Loading...</MudText>
    </LoadingContent>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

@code
{
    MudTable<TransactionDto> table;
    bool loading = false;

    private async Task<TableData<TransactionDto>> ServerReload(TableState state)
    {
        loading = true;

        try
        {
            var result = await TransactionsClient.GetTransactionsAsync(state.Page, state.PageSize);

            return new TableData<TransactionDto>() { TotalItems = result.TotalItems, Items = result.Items };
        }
        finally
        {
            loading = false;
        }
    }

    public async Task NewTransaction()
    {
        var dialogRef = DialogService.Show<NewTransactionDialog>("New transaction");

        var result = await dialogRef.Result;

        if (result.Cancelled) return;

        await table.ReloadServerData();
    }
}